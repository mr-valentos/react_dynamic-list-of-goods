{"version":3,"sources":["types/Select.ts","GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["Select","GoodsList","goods","className","map","good","style","color","fontSize","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","all","select","setSelect","loadData","callback","goodsFromServer","handleClick","newSelect","useEffect","Button","variant","type","onClick","first","red","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,+ECOCC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,WAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBACEF,UAAU,iBAEV,UAAQ,OACRG,MAAO,CAAEC,MAAOF,EAAKE,MAAOC,SAAU,IAJxC,SAMGH,EAAKI,MAJDJ,EAAKK,W,SDZNV,O,aAAAA,I,iBAAAA,I,cAAAA,M,KEKL,SAASW,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAX,GAGJ,OAFoBA,EAAMe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAET,KAAKW,cAAcD,EAAEV,SAE7CY,MAAM,EAAG,OAIrBC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMqB,QAAO,SAAAlB,GAAI,MAAmB,QAAfA,EAAKE,aCZhCiB,EAAgB,WAC3B,MAA0BC,mBAAwB,MAAlD,mBAAOvB,EAAP,KAAcwB,EAAd,KACA,EAA4BD,mBAAiBzB,EAAO2B,KAApD,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAQ,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACea,IADf,OACTC,EADS,OAGfN,EAASM,GAHM,2CAAH,sDAMRC,EAAc,SAACF,EAAiCG,GACpDJ,EAASC,GACTF,EAAUK,IAOZ,OAJAC,qBAAU,WACRL,EAASnB,KACR,IAGD,sBAAKR,UAAU,MAAf,UACE,uDAEA,sBAAKA,UAAU,eAAf,UACE,cAACiC,EAAA,EAAD,CACEC,QAAST,IAAW5B,EAAO2B,IAAM,YAAc,WAC/CW,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAYtB,EAAQX,EAAO2B,MAJ5C,4BASA,cAACS,EAAA,EAAD,CACEC,QAAST,IAAW5B,EAAOwC,MAAQ,YAAc,WACjDF,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EAAYjB,EAAWhB,EAAOwC,QAJ/C,gCASA,cAACJ,EAAA,EAAD,CACEC,QAAST,IAAW5B,EAAOyC,IAAM,YAAc,WAC/CH,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAYX,EAAatB,EAAOyC,MAJjD,+BAUDvC,GAAU,cAAC,EAAD,CAAWA,MAAOA,KAC3BA,GAAU,oDC3DlBwC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33155ce6.chunk.js","sourcesContent":["export enum Select {\n  'all',\n  'first',\n  'red',\n}\n","import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"goodList\">\n    {goods.map(good => (\n      <li\n        className=\"goodList__item\"\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color, fontSize: 20 }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const sortedGoods = goods.sort((a, b) => a.name.localeCompare(b.name));\n\n      return sortedGoods.slice(0, 5);\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Button } from '@mui/material';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { Select } from './types/Select';\n\nimport { get5First, getAll, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | null>(null);\n  const [select, setSelect] = useState<Select>(Select.all);\n\n  const loadData = async (callback: () => Promise<Good[]>) => {\n    const goodsFromServer = await callback();\n\n    setGoods(goodsFromServer);\n  };\n\n  const handleClick = (callback: () => Promise<Good[]>, newSelect: Select) => {\n    loadData(callback);\n    setSelect(newSelect);\n  };\n\n  useEffect(() => {\n    loadData(getAll);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <div className=\"App__buttons\">\n        <Button\n          variant={select === Select.all ? 'contained' : 'outlined'}\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={() => handleClick(getAll, Select.all)}\n        >\n          Load all goods\n        </Button>\n\n        <Button\n          variant={select === Select.first ? 'contained' : 'outlined'}\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={() => handleClick(get5First, Select.first)}\n        >\n          Load 5 first goods\n        </Button>\n\n        <Button\n          variant={select === Select.red ? 'contained' : 'outlined'}\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={() => handleClick(getRedGoods, Select.red)}\n        >\n          Load red goods\n        </Button>\n      </div>\n\n      {goods && (<GoodsList goods={goods} />)}\n      {!goods && (<p>Something wrong</p>)}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}